<section class="orders light-section">
  <div class="container mx-auto pt-12 px-10">
    <h1 class="font-bold text-lg mb-4">All Orders</h1>
    <table class="w-full table-auto bg-white">
      <thead>
        <tr>
          <th class="px-4 py-2 text-left">Orders</th>
          <th class="px-4 py-2 text-left">Customers</th>
          <th class="px-4 py-2 text-left">Address</th>
          <th class="px-4 py-2 text-left">Status</th>
          <th class="px-4 py-2 text-left">Placed at</th>
          <th class="px-4 py-2 text-left">Payment Status</th>
        </tr>
      </thead>
      <tbody id="orderTableBody"></tbody>
    </table>
  </div>
</section>

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
  function initAdmin(socket) {
  const orderTableBody = document.querySelector('#orderTableBody');
  if (!orderTableBody) {
    console.error("orderTableBody element not found!");
    return;
  }

  let orders = [];

  axios.get('/customers/adminOrder', {
    headers: {
      "X-Requested-With": "XMLHttpRequest"
    }
  }).then(res => {
    orders = res.data;
    const markup = generateMarkup(orders);
    orderTableBody.innerHTML = markup;
  }).catch(err => {
    console.error("Error fetching orders:", err);
  });

  function renderItems(items) {
    let parsedItems = Object.values(items);
    return parsedItems.map((menuItem) => {
      return `<p>${ menuItem.item.name } - ${ menuItem.qty } pcs </p>`;
    }).join('');
  }

  function generateMarkup(orders) {
    return orders.map(order => {
      return `
        <tr>
          <td class="border px-4 py-2 text-green-900">
            <p>${ order._id }</p>
            <div>${ renderItems(order.items) }</div>
          </td>
          <td class="border px-4 py-2">${ order.customerId ? order.customerId.name : 'Unknown'}</td>
          <td class="border px-4 py-2">${ order.address }</td>
          <td class="border px-4 py-2">
            <div class="inline-block relative w-64">
              <form action="/admin/order/status" method="POST">
                <input type="hidden" name="orderId" value="${ order._id }">
                <select name="status" onchange="this.form.submit()"
                  class="block appearance-none w-full bg-white border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline">
                  <option value="order_placed" ${ order.status === 'order_placed' ? 'selected' : '' }>Placed</option>
                  <option value="confirmed" ${ order.status === 'confirmed' ? 'selected' : '' }>Confirmed</option>
                  <option value="prepared" ${ order.status === 'prepared' ? 'selected' : '' }>Prepared</option>
                  <option value="delivered" ${ order.status === 'delivered' ? 'selected' : '' }>Delivered</option>
                  <option value="completed" ${ order.status === 'completed' ? 'selected' : '' }>Completed</option>
                </select>
              </form>
              <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700">
                <svg class="fill-current h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
                  <path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"/>
                </svg>
              </div>
            </div>
          </td>
          <td class="border px-4 py-2">
            ${ moment(order.createdAt).format('hh:mm A') }
          </td>
          <td class="border px-4 py-2">
            ${ order.paymentStatus ? 'paid' : 'Not paid' }
          </td>
        </tr>`;
    }).join('');
  }

  socket.on('orderPlaced', (order) => {
    orders.unshift(order); // Add the new order to the beginning of the array
    orderTableBody.innerHTML = generateMarkup(orders);
  });
}

initAdmin(socket);

});
</script>
